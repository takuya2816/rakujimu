# Stack
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Kuraberu-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    MemorySize: !FindInMap [EnvironmentMap, !Ref Environment, LambdaMemorySize]

Parameters:
  Environment:
    Type: String
    AllowedValues:
      - dev
      - prod
    Default: dev
  ChannelType:
    Type: String
    AllowedValues:
      - LIFF
    Default: LIFF

Mappings:
  EnvironmentMap:
    dev:
      LINEOAChannelId: 1657924587
      LIFFChannelId: 1657924599-nzZgQqDk
      OwnerMstDBName: OwnerMst
      ConstractorMstDBName: ConstractorMst
      PhaseStatusMstDBName: PhaseStatusMst
      RestorationRequestDBName: RestorationRequest
      RestorationBidDBName: RestorationBid
      LINEChannelAccessTokenDBName: LINEChannelAccessToken
      FrontS3BucketName: aws-sam-kuraberu-front
      LayerVersion: 4
      LoggerLevel: DEBUG
      LambdaMemorySize: 128
      # TTL is True:Reservation Data will be deleted at the specified date, False:Data will not be deleted
      TTL: False
      # Set day to delete data
      # If you set TTL: True, data will be deleted in the period specified below.
      # Even if you set TTL: False, please set int value.
      TTLDay: Data Delete DayA
      # ### ACCESS LOG SETTING ###
      # LogS3Bucket: S3BucketName for AccessLog
      # LogFilePrefix: hair-salon-sample/
      # ### ACCESS LOG SETTING ###
    prod:
      LINEOAChannelId: 1657924587
      LIFFChannelId: 1657924599-nzZgQqDk
      OwnerMstDBName: OwnerMstDBName
      ConstractorMstDBName: ConstractorMstDBName
      PhaseStatusMstDBName: PhaseStatusMstDBName
      RestorationRequestDBName: RestorationRequestDBName
      RestorationBidDBName: RestorationBidDBName
      LINEChannelAccessTokenDBName: LINEChannelAccessTokenDBName
      FrontS3BucketName: S3Bucket Name
      LayerVersion: Layer Version
      LoggerLevel: INFO or DEBUG
      LambdaMemorySize: 128
      TTL: False or True
      TTLDay: Data Delete Day
      # ### ACCESS LOG SETTING ###
      # LogS3Bucket: S3BucketName for AccessLog
      # LogFilePrefix: hair-salon-sample/
      # ### ACCESS LOG SETTING ###

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: logs:PutLogEvents
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Kuraberu*:*:*"
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - dynamodb:GetItem
                  - dynamodb:Scan
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Kuraberu*:*"
                  - !GetAtt OwnerMstDB.Arn
                  - !GetAtt ConstractorMstDB.Arn
                  - !GetAtt PhaseStatusMstDB.Arn
                  - !GetAtt RestorationRequestDB.Arn
                  - !GetAtt RestorationBidDB.Arn
                  - !Sub ${RestorationRequestDB.Arn}/index/*
                  - !Sub ${RestorationBidDB.Arn}/index/*
                  - !Join
                    - ""
                    - - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/
                      - !FindInMap [
                          EnvironmentMap,
                          !Ref Environment,
                          LINEChannelAccessTokenDBName,
                        ]
                      - /index/*
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource: "*"
      RoleName: !Sub "${AWS::StackName}-LambdaRole"

  RestorationRequestPut:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: restoration_request_put.lambda_handler
      Runtime: python3.8
      CodeUri: restoration_request_put/
      FunctionName: !Sub Kuraberu-RestorationRequestPut-${Environment}
      Description: ""
      Timeout: 3
      Layers:
        - !Join
          - ":"
          - - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer"
            - !ImportValue KuraberuLayerDev
            - !FindInMap [EnvironmentMap, !Ref Environment, LayerVersion]
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          OA_CHANNEL_ID:
            !FindInMap [EnvironmentMap, !Ref Environment, LINEOAChannelId]
          LIFF_CHANNEL_ID:
            !FindInMap [EnvironmentMap, !Ref Environment, LIFFChannelId]
          LOGGER_LEVEL:
            !FindInMap [EnvironmentMap, !Ref Environment, LoggerLevel]
          RESTORATION_REQUEST_DB: !Ref RestorationRequestDB
          CHANNEL_ACCESS_TOKEN_DB:
            !FindInMap [
              EnvironmentMap,
              !Ref Environment,
              LINEChannelAccessTokenDBName,
            ]
      Tags:
        Name: LINE
        App: Kuraberu
      Events:
        ApiTrigger:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /restoration_request_put
            Method: post
            RestApiId:
              Ref: KuraberuApiGateway

  RestorationRequestGet:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: restoration_request_get.lambda_handler
      Runtime: python3.8
      CodeUri: restoration_request_get/
      FunctionName: !Sub Kuraberu-RestorationRequestGet-${Environment}
      Description: ""
      Timeout: 3
      Layers:
        - !Join
          - ":"
          - - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer"
            - !ImportValue KuraberuLayerDev
            - !FindInMap [EnvironmentMap, !Ref Environment, LayerVersion]
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          LOGGER_LEVEL:
            !FindInMap [EnvironmentMap, !Ref Environment, LoggerLevel]
          RESTORATION_REQUEST_DB: !Ref RestorationRequestDB
      Tags:
        Name: LINE
        App: Kuraberu
      Events:
        ApiTrigger:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /restoration_request_get
            Method: get
            RestApiId:
              Ref: KuraberuApiGateway

  RestorationBidGet:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: restoration_bid_get.lambda_handler
      Runtime: python3.8
      CodeUri: restoration_bid_get/
      FunctionName: !Sub Kuraberu-RestorationBidGet-${Environment}
      Description: ""
      Timeout: 3
      Layers:
        - !Join
          - ":"
          - - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer"
            - !ImportValue KuraberuLayerDev
            - !FindInMap [EnvironmentMap, !Ref Environment, LayerVersion]
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          LOGGER_LEVEL:
            !FindInMap [EnvironmentMap, !Ref Environment, LoggerLevel]
          RESTORATION_REQUEST_DB: !Ref RestorationRequestDB
          RESTORATION_BID_DB: !Ref  RestorationBidDB
      Events:
        CategoryGet:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /restoration_bid_get
            Method: get
            RestApiId:
              Ref: KuraberuApiGateway

  RestorationOrderPut:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: restoration_order_put.lambda_handler
      Runtime: python3.8
      CodeUri: restoration_order_put/
      FunctionName: !Sub Kuraberu-RestorationOrderPut-${Environment}
      Description: ""
      Timeout: 3
      Layers:
        - !Join
          - ":"
          - - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer"
            - !ImportValue KuraberuLayerDev
            - !FindInMap [EnvironmentMap, !Ref Environment, LayerVersion]
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          OA_CHANNEL_ID:
            !FindInMap [EnvironmentMap, !Ref Environment, LINEOAChannelId]
          LIFF_CHANNEL_ID:
            !FindInMap [EnvironmentMap, !Ref Environment, LIFFChannelId]
          LOGGER_LEVEL:
            !FindInMap [EnvironmentMap, !Ref Environment, LoggerLevel]
          CHANNEL_TYPE:
            Ref: ChannelType
          RESTORATION_REQUEST_DB: !Ref RestorationRequestDB
          RESTORATION_BID_DB: !Ref  RestorationBidDB
          CHANNEL_ACCESS_TOKEN_DB:
            !FindInMap [
              EnvironmentMap,
              !Ref Environment,
              LINEChannelAccessTokenDBName,
            ]
      Tags:
        Name: LINE
        App: Kuraberu
      Events:
        ApiTrigger:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /restoration_order_put
            Method: post
            RestApiId:
              Ref: KuraberuApiGateway

  OwnerMstDB:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        - AttributeName: "OwnerId"
          AttributeType: N
        - AttributeName: "OwnerLINEName"
          AttributeType: S
        - AttributeName: "OwnerLINEID"
          AttributeType: S
      TableName:
        !FindInMap [EnvironmentMap, !Ref Environment, OwnerMstDBName]
      KeySchema:
        - AttributeName: "OwnerId"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        - IndexName: OwnerLINEName-OwnerLINEID-index
          KeySchema:
          - AttributeName: "OwnerLINEName"
            KeyType: "HASH"
          - AttributeName: "OwnerLINEID"
            KeyType: "RANGE"
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  ConstractorMstDB:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        - AttributeName: "ConstractorId"
          AttributeType: N
        - AttributeName: "ConstractorName"
          AttributeType: S
      TableName:
        !FindInMap [EnvironmentMap, !Ref Environment, ConstractorMstDBName]
      KeySchema:
        - AttributeName: "ConstractorId"
          KeyType: "HASH"
        - AttributeName: "ConstractorName"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  PhaseStatusMstDB:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        - AttributeName: "PhaseStatusId"
          AttributeType: N
        - AttributeName: "PhaseStatusName"
          AttributeType: S
      TableName:
        !FindInMap [EnvironmentMap, !Ref Environment, PhaseStatusMstDBName]
      KeySchema:
        - AttributeName: "PhaseStatusId"
          KeyType: "HASH"
        - AttributeName: "PhaseStatusName"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  RestorationRequestDB:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        - AttributeName: "RestorationRequestId"
          AttributeType: N
        - AttributeName: "OwnerId"
          AttributeType: N
        - AttributeName: "PhaseStatusId"
          AttributeType: N
        - AttributeName: "RequestDatetime"
          AttributeType: S
      TableName:
        !FindInMap [EnvironmentMap, !Ref Environment, RestorationRequestDBName]
      KeySchema:
        - AttributeName: "RestorationRequestId"
          KeyType: "HASH"
        - AttributeName: "PhaseStatusId"
          KeyType: "RANGE"
      GlobalSecondaryIndexes:
        - IndexName: OwnerId-Datetime-index
          KeySchema:
          - AttributeName: "OwnerId"
            KeyType: "HASH"
          - AttributeName: "RequestDatetime"
            KeyType: "RANGE"
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  RestorationBidDB:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        - AttributeName: "RestorationBidId"
          AttributeType: N
        - AttributeName: "RestorationRequestId"
          AttributeType: N
        - AttributeName: "ConstractorId"
          AttributeType: N
        - AttributeName: "BidDatetime"
          AttributeType: S
      TableName:
        !FindInMap [EnvironmentMap, !Ref Environment, RestorationBidDBName]
      KeySchema:
        - AttributeName: "RestorationBidId"
          KeyType: "HASH"
        - AttributeName: "RestorationRequestId"
          KeyType: "RANGE"
      GlobalSecondaryIndexes:
        - IndexName: ConstractorId-BidDatetime-index
          KeySchema:
            - AttributeName: "ConstractorId"
              KeyType: "HASH"
            - AttributeName: "BidDatetime"
              KeyType: "RANGE"
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  KuraberuApiGateway:
    Properties:
      StageName: !Ref Environment
      OpenApiVersion: 3.0.2
      Cors:
        AllowOrigin: "'*'"
        AllowHeaders: "'Origin, Authorization, Accept, X-Requested-With, Content-Type, x-amz-date, X-Amz-Security-Token'"
        AllowMethods: "'GET, POST, OPTIONS'"
    Type: AWS::Serverless::Api
    Tags:
      - Key: "Name"
        Value: "LINE"
      - Key: "App"
        Value: "Kuraberu"

  FrontBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        !FindInMap [EnvironmentMap, !Ref Environment, FrontS3BucketName]
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"
  # ### ACCESS LOG SETTING ###
  #     LoggingConfiguration:
  #       DestinationBucketName: !Ref AccessLogBucket
  #       LogFilePrefix:
  #         !FindInMap [EnvironmentMap, !Ref Environment, LogFilePrefix]
  # AccessLogBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     BucketName: !FindInMap [EnvironmentMap, !Ref Environment, LogS3Bucket]
  #     PublicAccessBlockConfiguration:
  #       BlockPublicAcls: True
  #       BlockPublicPolicy: True
  #       IgnorePublicAcls: True
  #       RestrictPublicBuckets: True
  #     BucketEncryption:
  #       ServerSideEncryptionConfiguration:
  #         - ServerSideEncryptionByDefault:
  #             SSEAlgorithm: "AES256"
  #     AccessControl: LogDeliveryWrite
  # ### ACCESS LOG SETTING ###

  AssetsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontBucket
      PolicyDocument:
        Version: "2008-10-17"
        Id: PolicyForCloudFrontPrivateContent
        Statement:
          - Action: s3:GetObject
            Sid: 1
            Effect: Allow
            Resource: !Sub arn:aws:s3:::${FrontBucket}/*
            Principal:
              AWS: !Sub arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}
            Condition:
              Bool:
                "aws:SecureTransport": "true"
          - Action: s3:*
            Sid: 2
            Effect: Deny
            Principal: "*"
            Resource: !Sub arn:aws:s3:::${FrontBucket}
            Condition:
              Bool:
                "aws:SecureTransport": "false"

  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Origins:
          - ConnectionAttempts: 3
            ConnectionTimeout: 10
            DomainName: !GetAtt FrontBucket.DomainName
            Id: !Sub "S3-${FrontBucket}"
            OriginPath: ""
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}
        OriginGroups:
          Quantity: 0
        DefaultCacheBehavior:
          AllowedMethods:
            - "HEAD"
            - "DELETE"
            - "POST"
            - "GET"
            - "OPTIONS"
            - "PUT"
            - "PATCH"
          CachedMethods:
            - "HEAD"
            - "GET"
          Compress: false
          DefaultTTL: 0
          ForwardedValues:
            Cookies:
              Forward: "none"
            QueryString: false
          MaxTTL: 0
          MinTTL: 0
          SmoothStreaming: false
          TargetOriginId: !Sub "S3-${FrontBucket}"
          ViewerProtocolPolicy: "redirect-to-https"
        CustomErrorResponses:
          - ErrorCode: 403
            ResponsePagePath: "/index.html"
            ResponseCode: "200"
            ErrorCachingMinTTL: 0
        Comment: ""
        PriceClass: "PriceClass_All"
        Enabled: true
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
          MinimumProtocolVersion: "TLSv1"
        Restrictions:
          GeoRestriction:
            RestrictionType: "none"
        HttpVersion: "http2"
        DefaultRootObject: "index.html"
        IPV6Enabled: true
        Logging:
          Bucket: !GetAtt FrontBucket.DomainName
          Prefix: log
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref AWS::StackName

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  RestorationRequestPutApi:
    Description: "API Gateway endpoint URL for Development stage for RestorationRequestPut function"
    Value: !Sub "https://${KuraberuApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/restoration_request_put/"
  RestorationRequestPutFunction:
    Description: "RestorationRequestPut Lambda Function ARN"
    Value: !GetAtt RestorationRequestPut.Arn
  RestorationRequestGetApi:
    Description: "API Gateway endpoint URL for Development stage for RestorationRequestGet function"
    Value: !Sub "https://${KuraberuApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/restoration_request_get/"
  RestorationRequestGetFunction:
    Description: "RestorationRequestGet Lambda Function ARN"
    Value: !GetAtt RestorationRequestGet.Arn
  RestorationBidGetApi:
    Description: "API Gateway endpoint URL for Development stage for RestorationBidGet"
    Value: !Sub "https://${KuraberuApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/restoration_bid_get/"
  RestorationBidGetFunction:
    Description: "BidGet Lambda Function ARN"
    Value: !GetAtt RestorationBidGet.Arn
  RestorationOrderPutApi:
    Description: "API Gateway endpoint URL for Development stage for RestorationOrderPut function"
    Value: !Sub "https://${KuraberuApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/restoration_order_put/"
  RestorationOrderPutFunction:
    Description: "RestorationOrderPut Lambda Function ARN"
    Value: !GetAtt RestorationOrderPut.Arn
  LambdaLayer:
    Description: "Used Layer at Function"
    Value: !Join
      - ":"
      - - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer"
        - !ImportValue KuraberuLayerDev
        - !FindInMap [EnvironmentMap, !Ref Environment, LayerVersion]
  LINEOAChannelId:
    Description: "LINE Mini ChannelId"
    Value: !FindInMap [EnvironmentMap, !Ref Environment, LINEOAChannelId]
  LINEChannelType:
    Description: "LINE ChannelType"
    Value: !Ref ChannelType
  CloudFrontDomainName:
    Description: "CloudFront for Kuraberu Demo"
    Value: !GetAtt CloudFrontDistribution.DomainName
  S3:
    Description: "S3 Bucket for Frontend"
    Value: !Ref FrontBucket
